{
	"nodes":[
		{"id":"e61b2f6f5a5b94a4","type":"text","text":"Docker \n","x":213,"y":156,"width":127,"height":60},
		{"id":"157aa8e5bb3e957d","type":"text","text":"-  `docker exec -it <PID> <COMAND>`","x":288,"y":685,"width":352,"height":55},
		{"id":"7579935c4f49f0c7","type":"text","text":"- `docker start <PID>`\n- `docker stop <PID>`\n- `docker pause <PID>`\n- `docker unpause <PID>`\n- `docker rm <PID>`\n- Parar todos containers: `docker stop $(docker container ls -q)`","x":-340,"y":560,"width":587,"height":202},
		{"id":"0cb819686b93aa4e","type":"text","text":"Execução Interativa","x":362,"y":560,"width":205,"height":60},
		{"id":"a7434796dff3a65e","type":"text","text":"Networking e Portas","x":-80,"y":156,"width":210,"height":60},
		{"id":"3bf0a062dab1b686","type":"text","text":"Gerenciamento de Container","x":143,"y":303,"width":268,"height":60},
		{"id":"9a94b40ac4705b18","type":"text","text":"comandos básicos","x":465,"y":156,"width":200,"height":60},
		{"id":"787efeabce5807db","type":"text","text":"- `docker run -d -P <image>` (executa em background e mapeia portas)\n\n- `docker run -d -p <8080:80> <image>` (mapeia porta específica)\n\n- Mostrar portas: `docker port <PID>`","x":-780,"y":131,"width":608,"height":111},
		{"id":"1a6cf87d2780d72e","type":"text","text":"Gerenciamento de Imagens","x":804,"y":366,"width":256,"height":60},
		{"id":"3b27f591d9be51c7","type":"text","text":"- Listar imagens: `docker images`\n- Inspecionar container: `docker inspect`\n- Histórico: `docker history <PID>`\n- Construir imagem: `docker build -t guilherme/app-node:1.0 .`\n- Login e Push:\n    - `docker login -u <USER>`\n    - `docker push <PID>`\n- Tag: `docker tag guilherme/app-node:1.2 rossik1/app-node:1.2`","x":806,"y":513,"width":594,"height":249},
		{"id":"de97783ef06eefc3","type":"text","text":"- Listar redes: `docker network ls`\n- Criar rede: `docker network create --driver bridge <minha-bridge>`\n- Conectar container a rede: `docker run -it --name ubuntu2 --network minha-bridge ubuntu bash`","x":-1220,"y":500,"width":825,"height":100},
		{"id":"3a44a1b0147948f4","type":"text","text":"Gerenciamento de Redes","x":-927,"y":363,"width":240,"height":60},
		{"id":"5c093b33eed2aa4d","type":"link","url":"https://docs.docker.com/","x":240,"y":-2520,"width":1621,"height":1455},
		{"id":"7dcb6e5737832c6f","type":"text","text":"################\n#####DOCKER#####\n################\n\nhttps://docs.docker.com/\n\nusar wsl\nsudo usermod -aG docker $USER (adiciona o gp do docker ao current user fazendo com que n precise executar comandos docker com sudo)\n\n\ndocker run <image>\ndocker pull <image>\n\n\ndocker ps <-a>(lista todos conteiners já criados)\ndocker conteiner ls\n\ndocker start <PID>\ndocker stop <PID>\ndocker pause <PID>\ndocker unpause <PID>\ndocker rm <PID>\n\ndocker stop $(docker conteiner ls -q)\n\n\ndocker exec -it(interativo) <PID> <COMAND>\n\ndocker run -d -P <image> (-d detached processo fica em background) (-P faz com que a porta utilizada no conteiner seja disponibilizada no host original)\n\ndocker run -d -p <8080:80> <image>(Para mapear uma porta em especifico devemos utilizar -p e a porta que sera usada)\n\ndocker port <PID> (mostra as portas do conteiner)\n\ndocker images (mostra imagens no sistema)\n\ndocker inspect\n\ndocker history <PID>\n \ndocker build -t guilherme/app-node:1.0 .\n\ndocker login -u <USER>\n\ndocker push <PID>\n\ndocker tag guilherme/app-node:1.2 rossik1/app-node:1.2\n\nhttps://docs.docker.com/storage/bind-mounts/\n\ndocker run -it -v C:\\Users\\Guilherme\\Desktop\\app-exemplo\\volumeDocker:/home ubuntu bash\n\ndocker run -it --mount type=bind,source=\"$(pwd)\"/target,target=/app ubuntu bash\n\nhttps://docs.docker.com/storage/volumes/\n\ndocker volume ls \n\ndocker volume create <name>\n \ndocker run -it -v <name>:/<dir> ubuntu bash\nou \ndocker run -it --mount source=<name>,target=/app ubuntu bash\n\nhttps://docs.docker.com/storage/tmpfs/\n\ndocker run -it --tmpfs=/<dir> ubuntu bash\n\n\ndocker network ls\n\ndocker network create --driver bridge <minha-bridge>\n\ndocker run -it --name ubuntu2 --network minha-bridge ubuntu bash\n\nDockerfile\nexemplo\n\nFROM node:14\nWORKDIR /app-node\nARG PORT_BUILD=6000\nENV PORT=$PORT_BUILD\nEXPOSE $PORT_BUILD\nCOPY . .\nRUN npm install\nENTRYPOINT npm start\n\n\nhttps://docs.docker.com/compose/\n\ndocker-compose.yml\n\nservices:\n  mongodb:\n    image: mongo:4.4.6\n    container_name: meu-mongo\n    networks:\n      - compose-bridge\n  \n  alurabooks:\n    image: aluradocker/alura-books:1.0\n    container_name: alurabooks\n    networks:\n      - compose-bridge\n    ports:\n      - 3000:3000\n\nnetworks:\n  compose-bridge:\n    driver: bridge\n\t\n\t\ndocker-compose up (monta os conteiners)\n\ndocker-compose ps\ndocker-compose down\n\natualização dia 07/04/2024\n\n\"docker-compose\" está sendo descontinuado usar \"docker compose\"\nsubcomando do docker\n\ndocker compose up -d --force-recreate\n\nindica o local do arquivo compose caso n esteja na raiz\ndocker compose -f infra/compose.yaml up\n\nservices:\n  database:\n    image: \"postgres:16.0-alpine3.18\"\n    environment:\n      POSTGRES_PASSWORD: \"local_password\"\n    ports:\n      - \"5432:5432\"","x":2776,"y":-2000,"width":864,"height":3480},
		{"id":"a544ab81b5b0d16e","type":"text","text":"usar wsl\nsudo usermod -aG docker $USER (adiciona o gp do docker ao current user fazendo com que n precise executar comandos docker com sudo)","x":1480,"y":291,"width":1076,"height":85},
		{"id":"e4e5d44fda05aba0","type":"text","text":"Windows","x":1952,"y":156,"width":132,"height":50},
		{"id":"b60d5cd5caa3f5a4","type":"text","text":"https://docs.docker.com/","x":905,"y":-1065,"width":265,"height":50},
		{"id":"f72dfe4f4e41b0d4","type":"text","text":"Docker Compose","x":-980,"y":-224,"width":200,"height":60},
		{"id":"41eadaf70585ec7e","type":"text","text":"Arquivo do Docker","x":-1219,"y":-40,"width":220,"height":50},
		{"id":"fa2d83139a707c0f","type":"text","text":"Dockerfile","x":-1489,"y":-254,"width":159,"height":60},
		{"id":"3d88a13f36c951a5","type":"text","text":"- Subir containers: `docker compose up`\n- Listar containers: `docker compose ps`\n- Derrubar containers: `docker compose down`\n- Atualização: Uso do subcomando `docker compose` ao invés de `docker-compose`\n- Exemplo de uso com path: `docker compose -f infra/compose.yaml up`\n- Forçar recriação: `docker compose up -d --force-recreate`","x":-2399,"y":-327,"width":671,"height":206},
		{"id":"ebabcc95ae6ccb04","type":"text","text":"```\nservices:\n  database:\n    image: \"postgres:16.0-alpine3.18\"\n    environment:\n      POSTGRES_PASSWORD: \"local_password\"\n    ports:\n      - \"5432:5432\"","x":-2342,"y":-710,"width":558,"height":230},
		{"id":"d93e207f6bca9bb1","type":"text","text":"```\nservices:\n  mongodb:\n    image: mongo:4.4.6\n    container_name: meu-mongo\n    networks:\n      - compose-bridge\n  \n  alurabooks:\n    image: aluradocker/alura-books:1.0\n    container_name: alurabooks\n    networks:\n      - compose-bridge\n    ports:\n      - 3000:3000\n\nnetworks:\n  compose-bridge:\n    driver: bridge\n","x":-1679,"y":-1020,"width":540,"height":520},
		{"id":"6101b0f35a1a7aae","type":"text","text":"```FROM node:14\nWORKDIR /app-node\nARG PORT_BUILD=6000\nENV PORT=$PORT_BUILD\nEXPOSE $PORT_BUILD\nCOPY . . RUN npm install\nENTRYPOINT npm start","x":-1055,"y":-500,"width":351,"height":180},
		{"id":"1d9d08c59ac62d0c","type":"text","text":"### Dicas Extras\n\n1. **Automatize Processos:** Use `Dockerfile` e `docker-compose.yml` para automação e replicação fácil de ambientes.\n2. **Segurança:** Evite executar containers com privilégios de root.\n3. **Limpeza:** Regularmente limpe imagens e containers não utilizados com `docker system prune`.\n4. **Monitoramento:** Utilize ferramentas como `Portainer` para monitoramento visual dos containers.\n5. **Versões:** Verifique frequentemente as versões de suas imagens base para manter a segurança e atualizações.","x":-632,"y":-494,"width":920,"height":240},
		{"id":"93c7bb8e55aaa54f","type":"text","text":"- `docker run <image>`\n\n- `docker pull <image>`\n\n- `docker ps` (lista containers ativos)\n\n- `docker ps -a` (lista todos containers)\n\n-  `docker logs <hash>` \n- `docker search <name>` (procura por imagens na registry)","x":932,"y":73,"width":519,"height":218},
		{"id":"8abb2cd71afe9ee6","type":"text","text":"- **Bind Mounts:**\n    - `docker run -it -v C:\\Users\\Guilherme\\Desktop\\app-exemplo\\volumeDocker:/home ubuntu bash`\n    - `docker run -it --mount type=bind,source=\"$(pwd)\"/target,target=/app ubuntu bash`\n- **Volumes:**\n    - Listar volumes: `docker volume ls`\n    - Criar volume: `docker volume create <name>`\n    - Montar volume:\n        - `docker run -it -v <name>:/<dir> ubuntu bash`\n        - `docker run -it --mount source=<name>,target=/app ubuntu bash`\n- **Tmpfs:**\n    - `docker run -it --tmpfs=/<dir> ubuntu bash`","x":876,"y":-613,"width":854,"height":359},
		{"id":"2303c2abe0b94e20","type":"text","text":"Montagem e Volumes","x":1192,"y":-153,"width":221,"height":50}
	],
	"edges":[
		{"id":"684168ed1d686c03","fromNode":"9a94b40ac4705b18","fromSide":"right","toNode":"93c7bb8e55aaa54f","toSide":"left"},
		{"id":"28c3d95c2457ad0a","fromNode":"e61b2f6f5a5b94a4","fromSide":"bottom","toNode":"3bf0a062dab1b686","toSide":"top"},
		{"id":"206d2cd3d9af0c06","fromNode":"3bf0a062dab1b686","fromSide":"bottom","toNode":"7579935c4f49f0c7","toSide":"top"},
		{"id":"a60893638ab0285e","fromNode":"3bf0a062dab1b686","fromSide":"bottom","toNode":"0cb819686b93aa4e","toSide":"top"},
		{"id":"8ff4dbb3258187c9","fromNode":"0cb819686b93aa4e","fromSide":"bottom","toNode":"157aa8e5bb3e957d","toSide":"top"},
		{"id":"be88be8ca1d0f6b9","fromNode":"e61b2f6f5a5b94a4","fromSide":"left","toNode":"a7434796dff3a65e","toSide":"right"},
		{"id":"20268a067909e5cc","fromNode":"a7434796dff3a65e","fromSide":"left","toNode":"787efeabce5807db","toSide":"right"},
		{"id":"e82956283ccf6256","fromNode":"e61b2f6f5a5b94a4","fromSide":"right","toNode":"9a94b40ac4705b18","toSide":"left"},
		{"id":"4a9bbcce180edcfe","fromNode":"e61b2f6f5a5b94a4","fromSide":"bottom","toNode":"1a6cf87d2780d72e","toSide":"top"},
		{"id":"65741cc169563c07","fromNode":"1a6cf87d2780d72e","fromSide":"bottom","toNode":"3b27f591d9be51c7","toSide":"top"},
		{"id":"3cab53c61096bcd0","fromNode":"e61b2f6f5a5b94a4","fromSide":"top","toNode":"2303c2abe0b94e20","toSide":"bottom"},
		{"id":"ebaae4bf4a218ae1","fromNode":"2303c2abe0b94e20","fromSide":"top","toNode":"8abb2cd71afe9ee6","toSide":"bottom"},
		{"id":"ac91555fbb130d11","fromNode":"a7434796dff3a65e","fromSide":"bottom","toNode":"3a44a1b0147948f4","toSide":"top"},
		{"id":"abf43161c6ecb173","fromNode":"3a44a1b0147948f4","fromSide":"bottom","toNode":"de97783ef06eefc3","toSide":"top"},
		{"id":"95dec9231b9212dd","fromNode":"e61b2f6f5a5b94a4","fromSide":"top","toNode":"1d9d08c59ac62d0c","toSide":"bottom"},
		{"id":"128c078a46333f3c","fromNode":"e61b2f6f5a5b94a4","fromSide":"top","toNode":"41eadaf70585ec7e","toSide":"bottom"},
		{"id":"8a01455887567020","fromNode":"41eadaf70585ec7e","fromSide":"top","toNode":"fa2d83139a707c0f","toSide":"bottom"},
		{"id":"62d8d5d1101c812d","fromNode":"41eadaf70585ec7e","fromSide":"top","toNode":"f72dfe4f4e41b0d4","toSide":"bottom"},
		{"id":"ca33863ff2881fed","fromNode":"f72dfe4f4e41b0d4","fromSide":"top","toNode":"6101b0f35a1a7aae","toSide":"bottom"},
		{"id":"4c61bd35163ebc1b","fromNode":"fa2d83139a707c0f","fromSide":"top","toNode":"d93e207f6bca9bb1","toSide":"bottom"},
		{"id":"c42eab5c669010d0","fromNode":"fa2d83139a707c0f","fromSide":"left","toNode":"3d88a13f36c951a5","toSide":"right"},
		{"id":"790467ce88d41691","fromNode":"fa2d83139a707c0f","fromSide":"top","toNode":"ebabcc95ae6ccb04","toSide":"bottom"},
		{"id":"378c023a3dbf1059","fromNode":"b60d5cd5caa3f5a4","fromSide":"bottom","toNode":"e61b2f6f5a5b94a4","toSide":"top"},
		{"id":"de5040668ad70b89","fromNode":"e4e5d44fda05aba0","fromSide":"bottom","toNode":"a544ab81b5b0d16e","toSide":"top"}
	]
}